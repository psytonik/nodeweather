#!/usr/bin/env nodeimport {getArgs} from './helpers/args.js';import {printError,printSuccess,printHelp} from './services/log.service.js';import {saveKeyValue,TOKEN_DICTIONARY} from './services/storage.service.js';import {getWeather} from './services/apiWeather.service.js';const saveToken = async (token)=> {    if(!token.length) {        printError('Please add token')        return;    }    try {        await saveKeyValue(TOKEN_DICTIONARY.token, token);        printSuccess('Token successfully saved');    } catch (e){        printError(e.message, + ' ' + 'Something Went Wrong');    }};const getForecast = async () => {    try {        const weather = await getWeather('Tel Aviv');        console.log(weather)    } catch (error) {        if (error?.response?.status === 404) {            printError(error.response.data.message)        } else if (error?.response?.status === 401) {            printError(error?.response?.data.message)        } else {            printError(error?.message)        }    }}const initCLI = () => {    const args = getArgs(process.argv);    if(args.h) {        // output help        printHelp();    }    if(args.s){        // save city    }    if(args.t){        // token        return saveToken(args.t);    }    /// output weather    return getForecast();}initCLI();